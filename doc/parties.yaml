paths:
  customers:
    get:
      tags:
        - customer
      summary: Get all customers
      description: Returns an Array of all customers with the option to query them. 
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: The current version of Acc doesn't support searching in specific parameters it uses a fuzzy search over all advisable fields and returns any matching customers.
        - in: query
          name: identifier
          schema:
            type: string
          description: Search for customers with a matching identifier. This returns only exact matching elements (no fuzzy search whatsoever).
      responses:
        200:
          description: All matching customers
          content:
            application/json:
              schema:
                $ref: '#/schemas/parties'
        500:
          description: Internal Server Error
  customerById:
    parameters:
      - $ref: 'common.yaml#/idParam'
        description: Unique ID of the requested customer
    get:
      tags:
        - customer
      summary: Get a customer by ID
      responses:
        200:
          description: A customer
          content:
            application/json:
              schema:
                $ref: '#/schemas/party'
        404:
          description: No Customer with specified ID found.
        500:
          description: Internal Server Error
    put:
      tags:
        - customer
      summary: Update a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/schemas/partyBase'
      responses:
        200:
          description: Updated successfully.
        404:
          description: No Customer with specified ID found.
        500:
          description: Internal Server Error
    post: 
      tags:
        - customer
      summary: Add a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/schemas/partyBase'
      responses:
        200:
          description: Added successfully.
        404:
          description: Adding Customer failed.
        500:
          description: Internal Server Error
    delete:
      tags:
        - customer
      summary: Remove a customer
      response:
        200:
          description: Customer deleted successfully.
        404:
          description: No Customer with specified ID found.
        500:
          description: Internal Server Error
  employees:
    get:
      tags:
        - employee
      summary: Get all employees
      description: Returns an Array of all employees with the option to query them. 
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: The current version of Acc doesn't support searching in specific parameters it uses a fuzzy search over all advisable fields and returns any matching employees.
        - in: query
          name: identifier
          schema:
            type: string
          description: Search for employees with a matching identifier. This returns only exact matching elements (no fuzzy search whatsoever).
      responses:
        200:
          description: All matching employees
          content:
            application/json:
              schema:
                $ref: '#/schemas/parties'
        500:
          description: Internal Server Error
  employeeById:
    parameters:
      - $ref: 'common.yaml#/idParam'
        description: Unique ID of the requested employee
    get:
      tags:
        - employee
      summary: Get a employee by ID
      responses:
        200:
          description: A employee
          content:
            application/json:
              schema:
                $ref: '#/schemas/party'
        404:
          description: No Employee with specified ID found.
        500:
          description: Internal Server Error
    put:
      tags:
        - employee
      summary: Update a employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/schemas/partyBase'
      responses:
        200:
          description: Updated successfully.
        404:
          description: No Employee with specified ID found.
        500:
          description: Internal Server Error
    post: 
      tags:
        - employee
      summary: Add a employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/schemas/partyBase'
      responses:
        200:
          description: Added successfully.
        404:
          description: Adding Employee failed.
        500:
          description: Internal Server Error
    delete:
      tags:
        - employee
      summary: Remove a employee
      response:
        200:
          description: Employee deleted successfully.
        404:
          description: No Employee with specified ID found.
        500:
          description: Internal Server Error
schemas:
  parties:
    type: array
    description: A collection of multiple parties (customers or employees)
    items:
      $ref: '#/schemas/party'
  partyBase:
    type: object
    description: A company or person (customer or employee) which is in in some way relevant to the company
    properties:
      identifier:
        $ref: 'common.yaml#/identifier/party'
      name:
        type: string
        description: Name of the person/company
        example: Max Mustermann
      street: 
        type: string
        description: Name of the street the party residence in
        example: Society Street
      streetNr:
        type: integer
        description: Street number of party's address
        example: 49
      postalCode:
        type: integer
        description: ZIP/Postal-Code of the address
        example: 8000
      place:
        type: string
        description: Name of the place
        example: ZÃ¼rich
      partyType:
        type: integer
        description: States whether a party is a customer or a employee. 0 = Employee, 1 = Customer.
        enum:
          - 0
          - 1
        example: 0
  party:
    allOf:
      - type: object
        properties:
          id:
            $ref: 'common.yaml#/id'
      - $ref: '#/schemas/partyBase'
      
